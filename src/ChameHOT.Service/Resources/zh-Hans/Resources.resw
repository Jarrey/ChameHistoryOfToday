<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="About" xml:space="preserve">
    <value>关于应用</value>
  </data>
  <data name="AboutButton.Content" xml:space="preserve">
    <value> 关于</value>
  </data>
  <data name="AboutContent" xml:space="preserve">
    <value>&lt;StackPanel xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"&gt;
    &lt;StackPanel.Resources&gt;
        &lt;Style TargetType="TextBlock"&gt;
            &lt;Setter Property="Margin" Value="0,8,0,8"/&gt;
            &lt;Setter Property="TextWrapping" Value="Wrap"/&gt;
        &lt;/Style&gt;
    &lt;/StackPanel.Resources&gt;
    &lt;Grid&gt;
        &lt;Grid.ColumnDefinitions&gt;
            &lt;ColumnDefinition Width="auto"/&gt;
            &lt;ColumnDefinition Width="*"/&gt;
        &lt;/Grid.ColumnDefinitions&gt;                
        &lt;Image Source="ms-appx:///ChameHOT_Service/UI/Assets/Logo.png" Margin="4,0,4,0"/&gt;
        &lt;TextBlock Grid.Column="1" FontWeight="Bold" FontSize="20" VerticalAlignment="Center"&gt;Chameleon - 历史上的今天&lt;/TextBlock&gt;
    &lt;/Grid&gt;
    &lt;TextBlock&gt;Chameleon 之历史上的今天，是一款优秀的锁屏应用，属于Chameleon系列。历史上的今天可以在您的设备锁屏上自动显示历史上今天全球发生的事件。同时应用还可以自动每隔一段时间从维基百科抓取数据，并且自动将“历史上的今天”显示到你的锁屏上。请点击应用中的“开始”按钮，然后静静等待每天的大事件展现在你的锁屏上吧。&lt;/TextBlock&gt;
    &lt;TextBlock&gt;应用是完全免费的，如果你有任何疑问和建议，请随时发送电子邮件到 jar.bob@gmail，同时我也会继续开发更多Chameleon系列应用来丰富你的Windows 8锁屏。&lt;/TextBlock&gt;
    &lt;TextBlock FontWeight="Bold"&gt;Chameleon 系列:&lt;/TextBlock&gt;
    &lt;Grid&gt;
        &lt;Grid.ColumnDefinitions&gt;
            &lt;ColumnDefinition Width="auto"/&gt;
            &lt;ColumnDefinition Width="*"/&gt;
        &lt;/Grid.ColumnDefinitions&gt;                
        &lt;Image Source="ms-appx:///ChameHOT_Service/UI/Assets/ChameleonLogo.png" Margin="2,0,2,0"/&gt;
        &lt;HyperlinkButton Grid.Column="1" Content="下载 Chameleon 之百变锁屏" VerticalAlignment="Center" NavigateUri="http://apps.microsoft.com/windows/zh-cn/app/chameleon/fa822ed6-c51d-4e3a-a2de-db7adf81eef0"/&gt;
    &lt;/Grid&gt;
    &lt;TextBlock&gt;&lt;/TextBlock&gt;
    &lt;TextBlock FontWeight="Bold"&gt;隐私策略&lt;/TextBlock&gt;
    &lt;TextBlock&gt;本应用不会收集、存储、发布您的任何个人信息或者与您的设备相关的信息。本应用不会收集任何统计数据和分析数据，也不会跟踪用户的行为。&lt;/TextBlock&gt;
&lt;TextBlock&gt;如果需要改变本应用的隐私策略，我会将相关的改动在此设置页面发布，以便您能随时了解本应用会收集什么信息。任何时候如果您对此隐私策略有疑问，请通过电子邮件 jar.bob@gmail.com 和我联系。&lt;/TextBlock&gt;
&lt;/StackPanel&gt;</value>
  </data>
  <data name="AboutTitle" xml:space="preserve">
    <value>关于</value>
  </data>
  <data name="AppearanceButton.Content" xml:space="preserve">
    <value> 外观设置</value>
  </data>
  <data name="BackgroundSettingText.Text" xml:space="preserve">
    <value>背景</value>
  </data>
  <data name="BackgroundToggle.OffContent" xml:space="preserve">
    <value>隐藏</value>
  </data>
  <data name="BackgroundToggle.OnContent" xml:space="preserve">
    <value>显示</value>
  </data>
  <data name="BT12H" xml:space="preserve">
    <value>12小时</value>
  </data>
  <data name="BT15M" xml:space="preserve">
    <value>15分钟</value>
  </data>
  <data name="BT1D" xml:space="preserve">
    <value>1天</value>
  </data>
  <data name="BT1H" xml:space="preserve">
    <value>1小时</value>
  </data>
  <data name="BT2H" xml:space="preserve">
    <value>2小时</value>
  </data>
  <data name="BT30M" xml:space="preserve">
    <value>30分钟</value>
  </data>
  <data name="BT3H" xml:space="preserve">
    <value>3小时</value>
  </data>
  <data name="BT45M" xml:space="preserve">
    <value>45分钟</value>
  </data>
  <data name="ClosePopupButton.Content" xml:space="preserve">
    <value> 关闭</value>
  </data>
  <data name="CopyrightContent" xml:space="preserve">
    <value>版权所有 WikiPedia.org</value>
  </data>
  <data name="Help" xml:space="preserve">
    <value>帮助</value>
  </data>
  <data name="HelpButton.Content" xml:space="preserve">
    <value> 帮助</value>
  </data>
  <data name="HelpPageUrl" xml:space="preserve">
    <value>http://chameleonapp.azurewebsites.net/ChameHOT/ChameHOT_zh-hans.html</value>
  </data>
  <data name="Later" xml:space="preserve">
    <value>以后再说</value>
  </data>
  <data name="MoreButton.Content" xml:space="preserve">
    <value> 更多信息</value>
  </data>
  <data name="Never" xml:space="preserve">
    <value>不，谢谢</value>
  </data>
  <data name="OKPopupButton.Content" xml:space="preserve">
    <value> 确定</value>
  </data>
  <data name="OnThisDay" xml:space="preserve">
    <value>历史上的今天</value>
  </data>
  <data name="PageLogo.Source" xml:space="preserve">
    <value>ms-appx:///ChameHOT_Service/UI/Assets/Main_zh-hans.png</value>
  </data>
  <data name="PrivacyPolicy" xml:space="preserve">
    <value>隐私策略</value>
  </data>
  <data name="Rate" xml:space="preserve">
    <value>去打个分吧</value>
  </data>
  <data name="ReloadButon.Content" xml:space="preserve">
    <value> 刷新</value>
  </data>
  <data name="ReviewPromptContent" xml:space="preserve">
    <value>你喜欢这个应用吗，赶紧去打个分吧？</value>
  </data>
  <data name="ReviewPromptTitle" xml:space="preserve">
    <value>你喜欢这个应用吗？</value>
  </data>
  <data name="SetBackgroundTaskSucessfully" xml:space="preserve">
    <value>成功设置后台任务，应用会自动更新你的系统锁屏背景</value>
  </data>
  <data name="SetLKButton.Content" xml:space="preserve">
    <value> 设置为锁屏背景</value>
  </data>
  <data name="SetLockScreenError" xml:space="preserve">
    <value>设置锁屏未成功</value>
  </data>
  <data name="SetLockScreenSucessfully" xml:space="preserve">
    <value>设置锁屏成功</value>
  </data>
  <data name="StartButton.Content" xml:space="preserve">
    <value> 开始自动更新锁屏</value>
  </data>
  <data name="StopButton.Content" xml:space="preserve">
    <value> 停止自动更新锁屏</value>
  </data>
  <data name="TimeIntervalText.Text" xml:space="preserve">
    <value>间隔时间</value>
  </data>
  <data name="UnregisterBackgroundTaskSucessfully" xml:space="preserve">
    <value>成功注销后台任务</value>
  </data>
</root>